#! /bin/sh
#
# obs_check_deb_spec.sh -- test consistency of the owncloud server package
# This script is maintained at https://github.com/owncloud/administration/blob/master/jenkins/obs_integration/obs_check_deb_spec.sh
#
# This script was used to assert that all apps have their proper sub packages. 
# Note, that since 9.0 we no longer split away apps packages.
#
# The top part is owncloud specific apps handling.
# The remainder should be generic consistency test.
# 
# 2015-01-19, jw@owncloud.com, intial draught with automattic apps splitting.
# 2015-01-26, jw@owncloud.com, added generic debian.* vs *.spec checks.
# 
#### Dependencies:
# Requires: /usr/bin/rpmspec	# from rpm-4.x
####

critical=$1	# 'deb' or 'rpm', default: 'rpm'

deb_error=0
rpm_error=0
# set -x

tar_top=.
if [ ! -d "$tar_top/apps" ]; then
  tar xf *.tar*
  tar_top=$(tar tf *.tar* | head -1)
fi

srcdir=$(dirname $0)
specfile=$srcdir/*.spec
debian_control=$srcdir/debian.control
pkgname=$(basename $specfile .spec)

for app in $(ls $tar_top/apps); do
  if ! grep -q "^%oc_app_package $app\\b" $specfile; then
    echo "TODO: Please add to $pkgname.spec: %oc_app_package $app"
    rpm_error=1
  fi

  if ! grep -q "^Requires:.*-app-$app\\b" $specfile; then
    echo "TODO: Please add to $pkgname.spec: Requires: %{name}-app-$app"
    rpm_error=1
  fi

  app_pkg=$(echo $pkgname-app-$app | tr _ -)
  if [ ! -f $srcdir/debian.$app_pkg.install ]; then
    echo "TODO: Please add file debian.$app_pkg.install (auto-created)"
    echo "apps/$app/* /usr/share/owncloud/apps/$app/" > $srcdir/debian.$app_pkg.install
    deb_error=1
  fi
done

rpmspec --parse $specfile > /tmp/_$$_spec
## will see all app-* packages as we are after macro expansion. 
## HACK: the auto-creation above prevents duplicate messages.
##
while read a b c; do
  test "$a" = '%package' || continue
  if [ "$b" = '-n' ]; then
    sub_pkg=$(echo $c | tr _ -)
  else
    sub_pkg=$(echo $pkgname-$b | tr _ -)
  fi

  if [ ! -f $srcdir/debian.$sub_pkg.install ]; then
    echo "TODO: Please add file debian.$sub_pkg.install (missing, $sub_pkg seen in $specfile)"
    deb_error=1
  fi

  if ! grep -q "^Package:.*\\b$sub_pkg\\b" $debian_control; then
    echo "Package $sub_pkg not found in debian.control (Entry appended)"
    cat <<EOF>>$debian_control

## REMOVE-THIS-LINE-AFTER-REVIEWING-BELOW
Package: $sub_pkg
Architecture: any
Depends: $pkgname
Description: The $pkgname subpackage $sub_pkg
 .
EOF
    deb_error=1
  fi

done < /tmp/_$$_spec
rm -f  /tmp/_$$_spec

if grep -q "REMOVE-THIS" $debian_control; then
  echo "TODO: debian.control needs review. Autogenerated contents near the end with dummy 'Depends:' entry!"
  deb_error=1
fi

## reverse check, all that is listed in debian.controll should have a debian.*.install file
cat $debian_control > /tmp/_$$_control
while read a sub_pkg; do
  test "$a" = 'Package:' || continue
  if [ ! -f $srcdir/debian.$sub_pkg.install ]; then
    echo "TODO: Please add file debian.$sub_pkg.install (missing, $sub_pkg seen in $debian_control)"
    deb_error=1
  fi
done < /tmp/_$$_control
rm -f  /tmp/_$$_control

test "$critical" = 'deb' && exit $deb_error
exit $rpm_error
